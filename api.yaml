openapi: 3.0.0
paths:
  /auth/login:
    post:
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '201':
          description: ''
      tags: &ref_0
        - auth
  /auth/register:
    post:
      operationId: AuthController_register
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDto'
      responses:
        '201':
          description: ''
      tags: *ref_0
  /auth/logout:
    post:
      operationId: AuthController_logout
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveUserDto'
      tags: *ref_0
  /users/me/notes:
    post:
      operationId: UsersMeNotesController_createUserNote
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserNoteDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveNoteDto'
      tags: &ref_1
        - users-me-notes
    get:
      operationId: UsersMeNotesController_findAllUserNotes
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetrieveNoteDto'
      tags: *ref_1
  /users/me/notes/{id}:
    get:
      operationId: UsersMeNotesController_findOneUserNote
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveNoteDto'
      tags: *ref_1
    patch:
      operationId: UsersMeNotesController_updateUserNote
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNoteDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveNoteDto'
      tags: *ref_1
    delete:
      operationId: UsersMeNotesController_removeUserNote
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveNoteDto'
      tags: *ref_1
  /users/{userId}/notes:
    post:
      operationId: UsersNotesController_createUserNote
      parameters:
        - name: userId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserNoteDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveNoteDto'
      tags: &ref_2
        - users-notes
    get:
      operationId: UsersNotesController_findAllUserNotes
      parameters:
        - name: userId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetrieveNoteDto'
      tags: *ref_2
  /users/{userId}/notes/{id}:
    get:
      operationId: UsersNotesController_findOneUserNote
      parameters:
        - name: userId
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveNoteDto'
      tags: *ref_2
    patch:
      operationId: UsersNotesController_updateUserNote
      parameters:
        - name: userId
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNoteDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveNoteDto'
      tags: *ref_2
    delete:
      operationId: UsersNotesController_removeUserNote
      parameters:
        - name: userId
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveNoteDto'
      tags: *ref_2
  /users/contacts:
    post:
      operationId: UsersContactsController_createUserContact
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserContactDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveContactDto'
      tags: &ref_3
        - users-contacts
    get:
      operationId: UsersContactsController_findAllUserContacts
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetrieveContactDto'
      tags: *ref_3
  /users/contacts/{id}:
    get:
      operationId: UsersContactsController_findOneUserContact
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveContactDto'
      tags: *ref_3
    patch:
      operationId: UsersContactsController_updateUserContact
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveContactDto'
      tags: *ref_3
    delete:
      operationId: UsersContactsController_removeUserContact
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveContactDto'
      tags: *ref_3
  /users/me:
    get:
      operationId: UsersMeController_me
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveUserDto'
      tags: &ref_4
        - users-me
    patch:
      operationId: UsersMeController_updateMe
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveUserDto'
      tags: *ref_4
  /users/me/change-password:
    post:
      operationId: UsersMeController_ChangePassword
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveUserDto'
      tags: *ref_4
  /users:
    post:
      operationId: UsersController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveUserDto'
      tags: &ref_5
        - users
    get:
      operationId: UsersController_findAll
      parameters:
        - name: id
          required: false
          in: query
          schema:
            type: number
        - name: email
          required: false
          in: query
          schema:
            type: string
        - name: name
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetrieveUserDto'
      tags: *ref_5
  /users/{id}:
    get:
      operationId: UsersController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveUserDto'
      tags: *ref_5
    patch:
      operationId: UsersController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveUserDto'
      tags: *ref_5
    delete:
      operationId: UsersController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveUserDto'
      tags: *ref_5
  /notes:
    post:
      operationId: NotesController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNoteDto'
      responses:
        '201':
          description: ''
      tags: &ref_6
        - notes
    get:
      operationId: NotesController_findAll
      parameters:
        - name: id
          required: false
          in: query
          schema:
            type: number
        - name: title
          required: false
          in: query
          schema:
            type: string
        - name: content
          required: false
          in: query
          schema:
            type: string
        - name: userId
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetrieveNoteDto'
      tags: *ref_6
  /notes/{id}:
    get:
      operationId: NotesController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveNoteDto'
      tags: *ref_6
    patch:
      operationId: NotesController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNoteDto'
      responses:
        '200':
          description: ''
      tags: *ref_6
    delete:
      operationId: NotesController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_6
  /contacts:
    post:
      operationId: ContactsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveContactDto'
      tags: &ref_7
        - contacts
    get:
      operationId: ContactsController_findAll
      parameters:
        - name: id
          required: false
          in: query
          schema:
            type: number
        - name: firstName
          required: false
          in: query
          schema:
            type: string
        - name: lastName
          required: false
          in: query
          schema:
            type: string
        - name: email
          required: false
          in: query
          schema:
            type: string
        - name: phone
          required: false
          in: query
          schema:
            type: string
        - name: dateOfBirth
          required: false
          in: query
          schema:
            type: string
        - name: instagram
          required: false
          in: query
          schema:
            type: string
        - name: userId
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetrieveContactDto'
      tags: *ref_7
  /contacts/{id}:
    get:
      operationId: ContactsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveContactDto'
      tags: *ref_7
    patch:
      operationId: ContactsController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveContactDto'
      tags: *ref_7
    delete:
      operationId: ContactsController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveContactDto'
      tags: *ref_7
info:
  title: EasyNotes API
  description: Documentation for EasyNotes API
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    LoginDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    RegisterDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    RetrieveUserDto:
      type: object
      properties:
        id:
          type: number
        email:
          type: string
        password:
          type: string
        name:
          type: string
        bio:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
        - id
        - email
        - password
        - name
        - bio
        - createdAt
        - updatedAt
    CreateUserNoteDto:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
      required:
        - title
        - content
    RetrieveNoteDto:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        content:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        userId:
          type: number
      required:
        - id
        - title
        - content
        - createdAt
        - updatedAt
        - userId
    UpdateNoteDto:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        userId:
          type: number
    CreateUserContactDto:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        dateOfBirth:
          type: string
        instagram:
          type: string
        note:
          type: string
    RetrieveContactDto:
      type: object
      properties:
        id:
          type: number
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        dateOfBirth:
          format: date-time
          type: string
        instagram:
          type: string
        note:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        userId:
          type: number
      required:
        - id
        - firstName
        - lastName
        - email
        - phone
        - dateOfBirth
        - instagram
        - note
        - createdAt
        - updatedAt
        - userId
    UpdateContactDto:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        dateOfBirth:
          type: string
        instagram:
          type: string
        note:
          type: string
        userId:
          type: number
    UpdateUserDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
        bio:
          type: string
    ChangePasswordDto:
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
        repeatNewPassword:
          type: string
      required:
        - currentPassword
        - newPassword
        - repeatNewPassword
    CreateUserDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
        bio:
          type: string
      required:
        - email
        - password
    CreateNoteDto:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        userId:
          type: number
      required:
        - title
        - content
        - userId
    CreateContactDto:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        dateOfBirth:
          type: string
        instagram:
          type: string
        note:
          type: string
        userId:
          type: number
      required:
        - userId